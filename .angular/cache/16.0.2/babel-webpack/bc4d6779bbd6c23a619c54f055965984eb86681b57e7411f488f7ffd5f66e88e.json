{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass HttpService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8082/api/v1/';\n    this.header = new HttpHeaders({\n      \"No-Auth\": \"true\"\n    });\n  }\n  getcur() {\n    return this.http.get(this.url + 'currentUser');\n  }\n  fetchAll() {\n    return this.http.get(this.url + 'medcins');\n  }\n  addMedecin(medecin) {\n    return this.http.post(this.url + 'registrer', medecin);\n  }\n  //Login\n  getToken(data) {\n    return this.http.post(this.url + 'auth', data);\n  }\n  login() {\n    const token = localStorage.getItem('token');\n    console.log(token);\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer' + token\n    });\n    return this.http.post(this.url + 'currentUser', this.header);\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});\nexport { HttpService };","map":{"version":3,"names":["HttpHeaders","HttpService","constructor","http","url","header","getcur","get","fetchAll","addMedecin","medecin","post","getToken","data","login","token","localStorage","getItem","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sony\\Desktop\\PFE\\front-end\\CAB\\src\\app\\Services\\http.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Medecin } from '../Models/Medecin';\nimport { Observable } from 'rxjs';\nimport { Token } from '@angular/compiler';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\nurl: String = 'http://localhost:8082/api/v1/';\nheader=new HttpHeaders({\"No-Auth\":\"true\"});\n  constructor(private http:HttpClient) {  \n  }\n  public getcur():Observable<Medecin>{\n    return this.http.get<Medecin>(this.url+ 'currentUser');\n  }\n  public fetchAll():Observable<Medecin[]>{\n    return this.http.get<Medecin[]>(this.url+ 'medcins');\n  }\n  public addMedecin(medecin: Medecin){\n    return this.http.post<Medecin>(this.url+'registrer', medecin);\n  }\n\n  //Login\n  getToken(data):Observable<any>{\n   return this.http.post(this.url+'auth',data);\n    \n  }\n\n  login():Observable<Medecin>{\n    \n    \n    const token=localStorage.getItem('token');\n    console.log(token);\n    const header=new HttpHeaders({\n      'Authorization':'Bearer'+token\n\n    });\nreturn this.http.post<Medecin>(this.url+'currentUser',this.header);\n\n  }\n\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,MAGaC,WAAW;EAGtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAF1B,KAAAC,GAAG,GAAW,+BAA+B;IAC7C,KAAAC,MAAM,GAAC,IAAIL,WAAW,CAAC;MAAC,SAAS,EAAC;IAAM,CAAC,CAAC;EAExC;EACOM,MAAMA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAU,IAAI,CAACH,GAAG,GAAE,aAAa,CAAC;EACxD;EACOI,QAAQA,CAAA;IACb,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,GAAG,GAAE,SAAS,CAAC;EACtD;EACOK,UAAUA,CAACC,OAAgB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,GAAG,GAAC,WAAW,EAAEM,OAAO,CAAC;EAC/D;EAEA;EACAE,QAAQA,CAACC,IAAI;IACZ,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,GAAG,GAAC,MAAM,EAACS,IAAI,CAAC;EAE5C;EAEAC,KAAKA,CAAA;IAGH,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,MAAMV,MAAM,GAAC,IAAIL,WAAW,CAAC;MAC3B,eAAe,EAAC,QAAQ,GAACe;KAE1B,CAAC;IACN,OAAO,IAAI,CAACZ,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,GAAG,GAAC,aAAa,EAAC,IAAI,CAACC,MAAM,CAAC;EAEhE;;AAhCWJ,WAAW,C;mBAAXA,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXtB,WAAW,C;SAAXA,WAAW;EAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}