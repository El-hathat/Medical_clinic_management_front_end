{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Chart, registerables } from 'node_modules/chart.js';\nChart.register(...registerables);\nlet DashboardComponent = class DashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.total = 0;\n    this.prix = 0;\n    this.totalecaisse = 0;\n    this.title = 'frontcab';\n  }\n  getnbpat() {\n    this.http.getPatientByCab(this.http.md.nom_cabinet).subscribe(result => {\n      this.nb = result;\n    });\n  }\n  gettotal() {\n    this.http.getPatientsCabinet(this.http.md.nom_cabinet).subscribe(result => {\n      this.patients.forEach(element => {\n        this.http.sumtotale(element.cin).subscribe(hh => {\n          console.log(element);\n          this.prix = hh;\n          this.total = this.total + this.prix;\n          console.log(this.prix);\n        });\n      });\n    });\n  }\n  getnbrdv() {\n    this.http.getRdvByCab(this.http.md.cin).subscribe(result => {\n      this.nbrdv = result;\n    });\n  }\n  ngOnInit() {\n    this.http.getCaisse().subscribe(res => {\n      console.log(res);\n      this.otherChart(res);\n      res.forEach(element => {\n        this.totalecaisse = this.totalecaisse + element;\n      });\n    });\n    this.getnbrdv();\n    this.http.getNombrePatient().subscribe(res => {\n      console.log(res);\n      this.RenderChart(res);\n    });\n    this.getnbpat();\n    // this.otherChart(null);\n  }\n\n  RenderChart(tableau) {\n    const myChart = new Chart(\"myChart\", {\n      type: 'bar',\n      data: {\n        labels: ['Jan', 'Fev', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n          label: 'Dossier Medicale',\n          data: tableau,\n          backgroundColor: ['rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) '],\n          borderColor: ['rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) ', 'rgb(255,69,0) '],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  otherChart(tableau) {\n    //console.log(this.patientNombre)\n    const myChart = new Chart(\"otherChart\", {\n      type: 'line',\n      data: {\n        labels: ['Jan', 'Fev', 'Mars', 'Avril', 'Mai', 'Juin', 'Juil', 'Aout', 'Sept', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n          label: 'caisse',\n          data: tableau,\n          backgroundColor: ['#0000FF', '#0000FF ', '#0000FF ', '#0000FF', '#0000FF', '#0000FF'],\n          borderColor: ['#0000FF', '#0000FF ', '#0000FF ', '#0000FF', '#0000FF', '#0000FF'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n} // patientNombre: any\n;\n\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","Chart","registerables","register","DashboardComponent","constructor","http","total","prix","totalecaisse","title","getnbpat","getPatientByCab","md","nom_cabinet","subscribe","result","nb","gettotal","getPatientsCabinet","patients","forEach","element","sumtotale","cin","hh","console","log","getnbrdv","getRdvByCab","nbrdv","ngOnInit","getCaisse","res","otherChart","getNombrePatient","RenderChart","tableau","myChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lenovo\\Music\\hat\\front-end2\\CAB\\src\\app\\Componenets\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart,registerables } from 'node_modules/chart.js';\nimport { Patient } from 'src/app/Models/Patient';\nimport { HttpService } from 'src/app/Services/http.service';\nChart.register(...registerables)\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit{\n  nb:number;\n  nbrdv:number;\n  total:number=0;\n  prix:number=0;\n  totalecaisse:number=0;\n  patients:Patient[];\n  // patientNombre: any\n  ;\n  constructor(private http:HttpService ){\n   \n  \n  }\n  getnbpat(){\n    \n      this.http.getPatientByCab(this.http.md.nom_cabinet).subscribe((result: any)=>{\n          \n        this.nb=result;\n        \n                  });\n\n                    \n  }\n  gettotal(){\n    \n    \n     \n        this.http.getPatientsCabinet(this.http.md.nom_cabinet).subscribe((result: any)=>{\n      \n          \n\n          this.patients.forEach(element => {\n\n            this.http.sumtotale(element.cin).subscribe((hh: any)=>{\n              console.log(element);\n        \n              this.prix=hh;\n              this.total=this.total+this.prix;\n              console.log(this.prix);\n\n                        });\n                        \n                      \n            \n          });\n          \n                    });\n                  \n      \n        \n    \n  \n}\n  getnbrdv(){\n    \n    this.http.getRdvByCab(this.http.md.cin).subscribe((result: any)=>{\n        \n      this.nbrdv=result;\n      \n                });\n  \n}\n\n  title = 'frontcab';\n  ngOnInit(): void{\n\n    this.http.getCaisse().subscribe(res=>{\n      console.log(res)\n      this.otherChart(res);  \n      res.forEach(element => {\n        this.totalecaisse=this.totalecaisse+element;\n        \n      });\n    });\n    this.getnbrdv();\n    \n    this.http.getNombrePatient().subscribe(res=>{\n      console.log(res)\n      this.RenderChart(res);\n});\n\n\n\n    this.getnbpat();\n   // this.otherChart(null);\n\n    \n    \n  }\n  RenderChart(tableau:any){\n\n    const myChart = new Chart(\"myChart\",{\n      type:'bar',\n      data:{\n        labels:['Jan','Fev','Mars','Avril','Mai','Juin','Juil','Aout','Sept','Oct','Nov','Dec'],\n        datasets: [{\n          label: 'Dossier Medicale',\n          data:tableau,\n          backgroundColor:[\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n          ],\n          borderColor:[\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n            'rgb(255,69,0) ',\n          ],\n          borderWidth:1\n        }]\n      },\n      options:{\n        scales:{\n          y:{\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n \n  otherChart(tableau:any){\n//console.log(this.patientNombre)\n    const myChart = new Chart(\"otherChart\",{\n      type:'line',\n      data:{\n        labels:['Jan','Fev','Mars','Avril','Mai','Juin','Juil','Aout','Sept','Oct','Nov','Dec'],\n        datasets: [{\n          label: 'caisse',\n          data:tableau,\n          \n          backgroundColor:[\n            '#0000FF',\n            '#0000FF ',\n            '#0000FF ',\n            '#0000FF',\n            '#0000FF',\n            '#0000FF',\n          ],\n          borderColor:[\n            '#0000FF',\n            '#0000FF ',\n            '#0000FF ',\n            '#0000FF',\n            '#0000FF',\n            '#0000FF',\n          ],\n          borderWidth:1\n        }]\n      },\n      options:{\n        scales:{\n          y:{\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}