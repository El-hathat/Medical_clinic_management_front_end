{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass HttpService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:8082/api/v1/';\n    this.header = new HttpHeaders({\n      \"No-Auth\": \"true\"\n    });\n  }\n  setst(st) {\n    this.st = st;\n  }\n  getst() {\n    return this.st;\n  }\n  setpt(pt) {\n    this.pt = pt;\n  }\n  getpt() {\n    return this.pt;\n  }\n  setMd(mid) {\n    this.md = mid;\n  }\n  getMd() {\n    return this.md;\n  }\n  getPatientByCin(cin) {\n    return this.http.get(this.url + 'getPatientByCin/' + cin);\n  }\n  getPatientByCab(cin) {\n    return this.http.get(this.url + 'findPatientsByMedcin/' + cin);\n  }\n  getRdvByCab(cin) {\n    return this.http.get(this.url + 'findPatientsByCab/' + cin);\n  }\n  sumtotale(cin) {\n    return this.http.get(this.url + 'gettotalByMedcin/' + cin);\n  }\n  getPatientsCabinet(cabinet) {\n    return this.http.get(this.url + 'getPatientsByMedcin/' + this.md.nom_cabinet);\n  }\n  getPatients() {\n    return this.http.get(this.url + 'patients');\n  }\n  addPatient(patient) {\n    return this.http.post(this.url + 'addPatient', patient);\n  }\n  supprimerpatient(cin) {\n    return this.http.delete(this.url + 'delPatient/' + cin);\n  }\n  supprimeruser(cin) {\n    return this.http.delete(this.url + 'delMedecin/' + cin);\n  }\n  getcur() {\n    return this.http.get(this.url + 'currentUser');\n  }\n  fetchAll() {\n    return this.http.get(this.url + 'medcins');\n  }\n  addMedecin(medecin) {\n    return this.http.post(this.url + 'registrer', medecin);\n  }\n  getAllPatientsBy() {\n    return this.http.get(this.url + 'getPatientsByMedcin/' + this.md);\n  }\n  //Login\n  getToken(data) {\n    return this.http.post(this.url + 'auth', data);\n  }\n  login(tkn) {\n    //const token=localStorage.getItem('token');\n    //console.log('hada howa : '+tkn);\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer' + tkn\n    });\n    this.http.post(this.url + 'currentUser', this.header);\n    return this.http.get(this.url + 'getMed');\n  }\n  getCurrentUser() {\n    console.log(this.http.get(this.url + 'getMed'));\n    return this.http.get(this.url + 'getMed');\n  }\n  setEtatPatient(cin) {\n    return this.http.put(this.url + 'setEtatPatient/' + cin, {});\n  }\n  setmodpat(cin, pwd) {\n    return this.http.put(this.url + 'setmoduser/' + cin, {\n      pwd\n    });\n  }\n  changeetat(cin) {\n    return this.http.put(this.url + 'setEtatMedecin/' + cin, {});\n  }\n  setmedcin(cin, med) {\n    console.log(med);\n    return this.http.patch(this.url + 'setmedecin/' + cin, {\n      med\n    });\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});\nexport { HttpService };","map":{"version":3,"names":["HttpHeaders","HttpService","constructor","http","url","header","setst","st","getst","setpt","pt","getpt","setMd","mid","md","getMd","getPatientByCin","cin","get","getPatientByCab","getRdvByCab","sumtotale","getPatientsCabinet","cabinet","nom_cabinet","getPatients","addPatient","patient","post","supprimerpatient","delete","supprimeruser","getcur","fetchAll","addMedecin","medecin","getAllPatientsBy","getToken","data","login","tkn","getCurrentUser","console","log","setEtatPatient","put","setmodpat","pwd","changeetat","setmedcin","med","patch","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\sony\\Desktop\\PFE\\front-end\\CAB\\src\\app\\Services\\http.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Medecin } from '../Models/Medecin';\nimport { Observable } from 'rxjs';\nimport { Token } from '@angular/compiler';\nimport { Patient } from '../Models/Patient';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\nurl: String = 'http://localhost:8082/api/v1/';\npublic md : Medecin;\npublic pt:Patient;\npublic st:String;\nheader=new HttpHeaders({\"No-Auth\":\"true\"});\n  constructor(private http:HttpClient) { \n    \n  }\n  setst(st:String):void{\n    this.st=st;\n    }\n    getst():String{\n     return this.st;\n      }\n  setpt(pt:Patient):void{\n    this.pt=pt;\n    }\n    getpt():Patient{\n     return this.pt;\n      }\n      setMd(mid:Medecin):void{\n        this.md=mid;\n        }\n        getMd():Medecin{\n         return this.md;\n          }\n          public getPatientByCin(cin:String):Observable<Patient>{\n  \n            return this.http.get<Patient>(this.url+'getPatientByCin/'+cin);\n          }\n          public getPatientByCab(cin:String):Observable<Number>{\n  \n            return this.http.get<number>(this.url+'findPatientsByMedcin/'+cin);\n          }\n          \n          public getRdvByCab(cin:String):Observable<Number>{\n  \n            return this.http.get<number>(this.url+'findPatientsByCab/'+cin);\n          }\n          \n          public sumtotale(cin:String):Observable<Number>{\n  \n            return this.http.get<number>(this.url+'gettotalByMedcin/'+cin);\n          }\n          \n          public getPatientsCabinet(cabinet:String):Observable<Patient[]>{\n            return this.http.get<Patient[]>(this.url+ 'getPatientsByMedcin/'+this.md.nom_cabinet);\n          }\n\n      public getPatients():Observable<Patient[]>{\n        return this.http.get<Patient[]>(this.url+ 'patients');\n      }\n      public addPatient(patient: Patient){\n        return this.http.post<Patient>(this.url+'addPatient', patient);\n      }\n      public supprimerpatient(cin:String):Observable<String>{\n        return this.http.delete<String>(this.url+'delPatient/'+cin);\n     }\n     public supprimeruser(cin:String):Observable<String>{\n      return this.http.delete<String>(this.url+'delMedecin/'+cin);\n   }\n\n  public getcur():Observable<Medecin[]>{\n    return this.http.get<Medecin[]>(this.url+ 'currentUser');\n  }\n  public fetchAll():Observable<Medecin[]>{\n    return this.http.get<Medecin[]>(this.url+ 'medcins');\n  }\n  public addMedecin(medecin: Medecin){\n    return this.http.post<Medecin>(this.url+'registrer', medecin);\n  }\n\n  public getAllPatientsBy():Observable<Patient[]>{\n    return this.http.get<Patient[]>(this.url+ 'getPatientsByMedcin/'+this.md);\n  }\n  //Login\n  getToken(data):Observable<any>{\n   return this.http.post(this.url+'auth',data);\n    \n  }\n\n  login(tkn:String):Observable<Medecin>{\n    \n    \n    //const token=localStorage.getItem('token');\n    //console.log('hada howa : '+tkn);\n    const header=new HttpHeaders({\n      'Authorization':'Bearer'+tkn\n\n    });\n   this.http.post<Medecin>(this.url+'currentUser',this.header);\nreturn this.http.get<Medecin>(this.url+'getMed');\n  }\n\n\n  public getCurrentUser():Observable<Medecin>{\n    console.log(this.http.get<Medecin>(this.url+'getMed'));\n    return this.http.get<Medecin>(this.url+'getMed');\n  }\n  public setEtatPatient(cin:String):any{\n  \n    return this.http.put(this.url+'setEtatPatient/'+cin,{});\n    \n  }\n  public setmodpat(cin:String,pwd:String):any{\n  \n    return this.http.put(this.url+'setmoduser/'+cin,{pwd});\n    \n  }\n\n  public changeetat(cin:String):any{\n  \n    return this.http.put(this.url+'setEtatMedecin/'+cin,{});\n    \n  }\n  public setmedcin(cin:String,med:Medecin):any{\n\n  console.log(med);\n    return this.http.patch(this.url+'setmedecin/'+cin,{med});\n    \n  }\n\n}\n\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,MAGaC,WAAW;EAMtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAL1B,KAAAC,GAAG,GAAW,+BAA+B;IAI7C,KAAAC,MAAM,GAAC,IAAIL,WAAW,CAAC;MAAC,SAAS,EAAC;IAAM,CAAC,CAAC;EAGxC;EACAM,KAAKA,CAACC,EAAS;IACb,IAAI,CAACA,EAAE,GAACA,EAAE;EACV;EACAC,KAAKA,CAAA;IACJ,OAAO,IAAI,CAACD,EAAE;EACb;EACJE,KAAKA,CAACC,EAAU;IACd,IAAI,CAACA,EAAE,GAACA,EAAE;EACV;EACAC,KAAKA,CAAA;IACJ,OAAO,IAAI,CAACD,EAAE;EACb;EACAE,KAAKA,CAACC,GAAW;IACf,IAAI,CAACC,EAAE,GAACD,GAAG;EACX;EACAE,KAAKA,CAAA;IACJ,OAAO,IAAI,CAACD,EAAE;EACb;EACOE,eAAeA,CAACC,GAAU;IAE/B,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAU,IAAI,CAACd,GAAG,GAAC,kBAAkB,GAACa,GAAG,CAAC;EAChE;EACOE,eAAeA,CAACF,GAAU;IAE/B,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAS,IAAI,CAACd,GAAG,GAAC,uBAAuB,GAACa,GAAG,CAAC;EACpE;EAEOG,WAAWA,CAACH,GAAU;IAE3B,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAS,IAAI,CAACd,GAAG,GAAC,oBAAoB,GAACa,GAAG,CAAC;EACjE;EAEOI,SAASA,CAACJ,GAAU;IAEzB,OAAO,IAAI,CAACd,IAAI,CAACe,GAAG,CAAS,IAAI,CAACd,GAAG,GAAC,mBAAmB,GAACa,GAAG,CAAC;EAChE;EAEOK,kBAAkBA,CAACC,OAAc;IACtC,OAAO,IAAI,CAACpB,IAAI,CAACe,GAAG,CAAY,IAAI,CAACd,GAAG,GAAE,sBAAsB,GAAC,IAAI,CAACU,EAAE,CAACU,WAAW,CAAC;EACvF;EAEGC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACtB,IAAI,CAACe,GAAG,CAAY,IAAI,CAACd,GAAG,GAAE,UAAU,CAAC;EACvD;EACOsB,UAAUA,CAACC,OAAgB;IAChC,OAAO,IAAI,CAACxB,IAAI,CAACyB,IAAI,CAAU,IAAI,CAACxB,GAAG,GAAC,YAAY,EAAEuB,OAAO,CAAC;EAChE;EACOE,gBAAgBA,CAACZ,GAAU;IAChC,OAAO,IAAI,CAACd,IAAI,CAAC2B,MAAM,CAAS,IAAI,CAAC1B,GAAG,GAAC,aAAa,GAACa,GAAG,CAAC;EAC9D;EACOc,aAAaA,CAACd,GAAU;IAC9B,OAAO,IAAI,CAACd,IAAI,CAAC2B,MAAM,CAAS,IAAI,CAAC1B,GAAG,GAAC,aAAa,GAACa,GAAG,CAAC;EAC9D;EAEMe,MAAMA,CAAA;IACX,OAAO,IAAI,CAAC7B,IAAI,CAACe,GAAG,CAAY,IAAI,CAACd,GAAG,GAAE,aAAa,CAAC;EAC1D;EACO6B,QAAQA,CAAA;IACb,OAAO,IAAI,CAAC9B,IAAI,CAACe,GAAG,CAAY,IAAI,CAACd,GAAG,GAAE,SAAS,CAAC;EACtD;EACO8B,UAAUA,CAACC,OAAgB;IAChC,OAAO,IAAI,CAAChC,IAAI,CAACyB,IAAI,CAAU,IAAI,CAACxB,GAAG,GAAC,WAAW,EAAE+B,OAAO,CAAC;EAC/D;EAEOC,gBAAgBA,CAAA;IACrB,OAAO,IAAI,CAACjC,IAAI,CAACe,GAAG,CAAY,IAAI,CAACd,GAAG,GAAE,sBAAsB,GAAC,IAAI,CAACU,EAAE,CAAC;EAC3E;EACA;EACAuB,QAAQA,CAACC,IAAI;IACZ,OAAO,IAAI,CAACnC,IAAI,CAACyB,IAAI,CAAC,IAAI,CAACxB,GAAG,GAAC,MAAM,EAACkC,IAAI,CAAC;EAE5C;EAEAC,KAAKA,CAACC,GAAU;IAGd;IACA;IACA,MAAMnC,MAAM,GAAC,IAAIL,WAAW,CAAC;MAC3B,eAAe,EAAC,QAAQ,GAACwC;KAE1B,CAAC;IACH,IAAI,CAACrC,IAAI,CAACyB,IAAI,CAAU,IAAI,CAACxB,GAAG,GAAC,aAAa,EAAC,IAAI,CAACC,MAAM,CAAC;IAC9D,OAAO,IAAI,CAACF,IAAI,CAACe,GAAG,CAAU,IAAI,CAACd,GAAG,GAAC,QAAQ,CAAC;EAC9C;EAGOqC,cAAcA,CAAA;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxC,IAAI,CAACe,GAAG,CAAU,IAAI,CAACd,GAAG,GAAC,QAAQ,CAAC,CAAC;IACtD,OAAO,IAAI,CAACD,IAAI,CAACe,GAAG,CAAU,IAAI,CAACd,GAAG,GAAC,QAAQ,CAAC;EAClD;EACOwC,cAAcA,CAAC3B,GAAU;IAE9B,OAAO,IAAI,CAACd,IAAI,CAAC0C,GAAG,CAAC,IAAI,CAACzC,GAAG,GAAC,iBAAiB,GAACa,GAAG,EAAC,EAAE,CAAC;EAEzD;EACO6B,SAASA,CAAC7B,GAAU,EAAC8B,GAAU;IAEpC,OAAO,IAAI,CAAC5C,IAAI,CAAC0C,GAAG,CAAC,IAAI,CAACzC,GAAG,GAAC,aAAa,GAACa,GAAG,EAAC;MAAC8B;IAAG,CAAC,CAAC;EAExD;EAEOC,UAAUA,CAAC/B,GAAU;IAE1B,OAAO,IAAI,CAACd,IAAI,CAAC0C,GAAG,CAAC,IAAI,CAACzC,GAAG,GAAC,iBAAiB,GAACa,GAAG,EAAC,EAAE,CAAC;EAEzD;EACOgC,SAASA,CAAChC,GAAU,EAACiC,GAAW;IAEvCR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;IACd,OAAO,IAAI,CAAC/C,IAAI,CAACgD,KAAK,CAAC,IAAI,CAAC/C,GAAG,GAAC,aAAa,GAACa,GAAG,EAAC;MAACiC;IAAG,CAAC,CAAC;EAE1D;;AAzHWjD,WAAW,C;mBAAXA,WAAW,EAAAmD,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXtD,WAAW,C;SAAXA,WAAW;EAAAuD,OAAA,EAAXvD,WAAW,CAAAwD,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPzD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}